/* 
 * Xero Payroll AU API
 *
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * Contact: api@xero.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Xero.NetStandard.OAuth2.Client.OpenAPIDateConverter;

namespace Xero.NetStandard.OAuth2.Model.PayrollAu
{
    /// <summary>
    /// TimesheetLine
    /// </summary>
    [DataContract]
    public partial class TimesheetLine : IEquatable<TimesheetLine>, IValidatableObject
    {

        /// <summary>
        /// The Xero identifier for an Earnings Rate
        /// </summary>
        /// <value>The Xero identifier for an Earnings Rate</value>
        [DataMember(Name = "EarningsRateID", EmitDefaultValue = false)]
        public Guid? EarningsRateID { get; set; }

        /// <summary>
        /// The Xero identifier for a Tracking Category. The TrackingOptionID must belong to the TrackingCategory selected as TimesheetCategories under Payroll Settings.
        /// </summary>
        /// <value>The Xero identifier for a Tracking Category. The TrackingOptionID must belong to the TrackingCategory selected as TimesheetCategories under Payroll Settings.</value>
        [DataMember(Name = "TrackingItemID", EmitDefaultValue = false)]
        public Guid? TrackingItemID { get; set; }

        /// <summary>
        /// The number of units on a timesheet line
        /// </summary>
        /// <value>The number of units on a timesheet line</value>
        [DataMember(Name = "NumberOfUnits", EmitDefaultValue = false)]
        public List<double> NumberOfUnits { get; set; }

        /// <summary>
        /// Last modified timestamp
        /// </summary>
        /// <value>Last modified timestamp</value>
        [DataMember(Name = "UpdatedDateUTC", EmitDefaultValue = false)]
        public DateTime? UpdatedDateUTC { get; private set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TimesheetLine {\n");
            sb.Append("  EarningsRateID: ").Append(EarningsRateID).Append("\n");
            sb.Append("  TrackingItemID: ").Append(TrackingItemID).Append("\n");
            sb.Append("  NumberOfUnits: ").Append(NumberOfUnits).Append("\n");
            sb.Append("  UpdatedDateUTC: ").Append(UpdatedDateUTC).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TimesheetLine);
        }

        /// <summary>
        /// Returns true if TimesheetLine instances are equal
        /// </summary>
        /// <param name="input">Instance of TimesheetLine to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TimesheetLine input)
        {
            if (input == null)
                return false;

            return
                (
                    this.EarningsRateID == input.EarningsRateID ||
                    (this.EarningsRateID != null &&
                    this.EarningsRateID.Equals(input.EarningsRateID))
                ) &&
                (
                    this.TrackingItemID == input.TrackingItemID ||
                    (this.TrackingItemID != null &&
                    this.TrackingItemID.Equals(input.TrackingItemID))
                ) &&
                (
                    this.NumberOfUnits == input.NumberOfUnits ||
                    this.NumberOfUnits != null &&
                    input.NumberOfUnits != null &&
                    this.NumberOfUnits.SequenceEqual(input.NumberOfUnits)
                ) &&
                (
                    this.UpdatedDateUTC == input.UpdatedDateUTC ||
                    (this.UpdatedDateUTC != null &&
                    this.UpdatedDateUTC.Equals(input.UpdatedDateUTC))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.EarningsRateID != null)
                    hashCode = hashCode * 59 + this.EarningsRateID.GetHashCode();
                if (this.TrackingItemID != null)
                    hashCode = hashCode * 59 + this.TrackingItemID.GetHashCode();
                if (this.NumberOfUnits != null)
                    hashCode = hashCode * 59 + this.NumberOfUnits.GetHashCode();
                if (this.UpdatedDateUTC != null)
                    hashCode = hashCode * 59 + this.UpdatedDateUTC.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
