/*
 * Xero Payroll AU
 *
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * The version of the OpenAPI document: 2.8.0
 * Contact: api@xero.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Xero.NetStandard.OAuth2.Api;
using Xero.NetStandard.OAuth2.Model.PayrollAu;
using Xero.NetStandard.OAuth2.Client;
using System.Reflection;
using Newtonsoft.Json;
using System.Threading.Tasks;

namespace Xero.NetStandard.OAuth2.Test.Model.PayrollAu
{
    /// <summary>
    ///  Class for testing LeaveLine
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class LeaveLineTests : IDisposable
    {
        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test the property 'CalculationType'
        /// </summary>
        [Theory]
        [InlineData("BASEDONORDINARYEARNINGS", LeaveLineCalculationType.BASEDONORDINARYEARNINGS)]
        [InlineData("ENTERRATEINPAYTEMPLATE", LeaveLineCalculationType.ENTERRATEINPAYTEMPLATE)]
        [InlineData("FIXEDAMOUNTEACHPERIOD", LeaveLineCalculationType.FIXEDAMOUNTEACHPERIOD)]
        [InlineData("NOCALCULATIONREQUIRED", LeaveLineCalculationType.NOCALCULATIONREQUIRED)]
        public async Task CalculationTypeTest(string input, LeaveLineCalculationType expected)
        {
            await JsonDoc.Assert<LeaveLine, LeaveLineCalculationType>(
                input: new JsonDoc.String(nameof(LeaveLine.CalculationType), input),
                toProperty: x => x.CalculationType,
                shouldBe: expected
            );
        }
        /// <summary>
        /// Test the property 'EntitlementFinalPayPayoutType'
        /// </summary>
        [Theory]
        [InlineData("NOTPAIDOUT", EntitlementFinalPayPayoutType.NOTPAIDOUT)]
        [InlineData("PAIDOUT", EntitlementFinalPayPayoutType.PAIDOUT)]
        public async Task EntitlementFinalPayPayoutTypeTest(string input, EntitlementFinalPayPayoutType expected)
        {
           await JsonDoc.Assert<LeaveLine, EntitlementFinalPayPayoutType>(
                input: new JsonDoc.String(nameof(LeaveLine.EntitlementFinalPayPayoutType), input),
                toProperty: x => x.EntitlementFinalPayPayoutType,
                shouldBe: expected
            );
        }
        /// <summary>
        /// Test the property 'EmploymentTerminationPaymentType'
        /// </summary>
        [Theory]
        [InlineData("O", EmploymentTerminationPaymentType.O)]
        [InlineData("R", EmploymentTerminationPaymentType.R)]
        public async Task EmploymentTerminationPaymentTypeTest(string input, EmploymentTerminationPaymentType expected)
        {
            await JsonDoc.Assert<LeaveLine, EmploymentTerminationPaymentType>(
                input: new JsonDoc.String(nameof(LeaveLine.EmploymentTerminationPaymentType), input),
                toProperty: x => x.EmploymentTerminationPaymentType,
                shouldBe: expected
            );
        }
    }
}
