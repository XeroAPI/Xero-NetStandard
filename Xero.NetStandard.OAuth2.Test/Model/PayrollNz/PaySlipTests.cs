/* 
 * Xero Payroll NZ
 *
 * This is the Xero Payroll API for orgs in the NZ region.
 *
 * The version of the OpenAPI document: 2.7.0
 * Contact: api@xero.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using System.Net;
using System.Net.Http;
using Xero.NetStandard.OAuth2.Api;
using Xero.NetStandard.OAuth2.Model.PayrollNz;
using Xero.NetStandard.OAuth2.Client;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace Xero.NetStandard.OAuth2.Test.Model.PayrollNz
{
    /// <summary>
    ///  Class for testing PaySlip
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PaySlipTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PaySlip
        //private PaySlip instance;

        public PaySlipTests()
        {
            // TODO uncomment below to create an instance of PaySlip
            //instance = new PaySlip();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PaySlip
        /// </summary>
        [Fact]
        public void PaySlipInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" PaySlip
            //Assert.IsInstanceOfType<PaySlip> (instance, "variable 'instance' is a PaySlip");
        }


        /// <summary>
        /// Test the property 'PaySlipID'
        /// </summary>
        [Fact]
        public void PaySlipIDTest()
        {
            // TODO unit test for the property 'PaySlipID'
        }
        /// <summary>
        /// Test the property 'EmployeeID'
        /// </summary>
        [Fact]
        public void EmployeeIDTest()
        {
            // TODO unit test for the property 'EmployeeID'
        }
        /// <summary>
        /// Test the property 'PayRunID'
        /// </summary>
        [Fact]
        public void PayRunIDTest()
        {
            // TODO unit test for the property 'PayRunID'
        }
        /// <summary>
        /// Test the property 'LastEdited'
        /// </summary>
        [Fact]
        public void LastEditedTest()
        {
            // TODO unit test for the property 'LastEdited'
        }
        /// <summary>
        /// Test the property 'FirstName'
        /// </summary>
        [Fact]
        public void FirstNameTest()
        {
            // TODO unit test for the property 'FirstName'
        }
        /// <summary>
        /// Test the property 'LastName'
        /// </summary>
        [Fact]
        public void LastNameTest()
        {
            // TODO unit test for the property 'LastName'
        }
        /// <summary>
        /// Test the property 'TotalEarnings'
        /// </summary>
        [Fact]
        public void TotalEarningsTest()
        {
            // TODO unit test for the property 'TotalEarnings'
        }
        /// <summary>
        /// Test the property 'GrossEarnings'
        /// </summary>
        [Fact]
        public void GrossEarningsTest()
        {
            // TODO unit test for the property 'GrossEarnings'
        }
        /// <summary>
        /// Test the property 'TotalPay'
        /// </summary>
        [Fact]
        public void TotalPayTest()
        {
            // TODO unit test for the property 'TotalPay'
        }
        /// <summary>
        /// Test the property 'TotalEmployerTaxes'
        /// </summary>
        [Fact]
        public void TotalEmployerTaxesTest()
        {
            // TODO unit test for the property 'TotalEmployerTaxes'
        }
        /// <summary>
        /// Test the property 'TotalEmployeeTaxes'
        /// </summary>
        [Fact]
        public void TotalEmployeeTaxesTest()
        {
            // TODO unit test for the property 'TotalEmployeeTaxes'
        }
        /// <summary>
        /// Test the property 'TotalDeductions'
        /// </summary>
        [Fact]
        public void TotalDeductionsTest()
        {
            // TODO unit test for the property 'TotalDeductions'
        }
        /// <summary>
        /// Test the property 'TotalReimbursements'
        /// </summary>
        [Fact]
        public void TotalReimbursementsTest()
        {
            // TODO unit test for the property 'TotalReimbursements'
        }
        /// <summary>
        /// Test the property 'TotalStatutoryDeductions'
        /// </summary>
        [Fact]
        public void TotalStatutoryDeductionsTest()
        {
            // TODO unit test for the property 'TotalStatutoryDeductions'
        }
        /// <summary>
        /// Test the property 'TotalSuperannuation'
        /// </summary>
        [Fact]
        public void TotalSuperannuationTest()
        {
            // TODO unit test for the property 'TotalSuperannuation'
        }
        /// <summary>
        /// Test the property 'BacsHash'
        /// </summary>
        [Fact]
        public void BacsHashTest()
        {
            // TODO unit test for the property 'BacsHash'
        }
        /// <summary>
        /// Test the property 'PaymentMethod'
        /// </summary>
        [Theory]
        [InlineData("Cheque", PaySlip.PaymentMethodEnum.Cheque)]
        [InlineData("Electronically", PaySlip.PaymentMethodEnum.Electronically)]
        [InlineData("Manual", PaySlip.PaymentMethodEnum.Manual)]
        public async Task PaymentMethodEnum_ValidInput_Deserialises(string input, PaySlip.PaymentMethodEnum expected)
        {
            var jsonContent = $@"""{input}""";
            var response = new HttpResponseMessage(HttpStatusCode.OK)
            {
                Content = new StringContent(jsonContent, Encoding.UTF8, "application/json")
            };
            response.EnsureSuccessStatusCode();
            var deserializer = new CustomJsonCodec(new Configuration());
            var actual = await deserializer.Deserialize<PaySlip.PaymentMethodEnum>(response);
            Assert.Equal(expected, actual);
        }

        [Fact]
        public async Task PaymentMethodEnum_NullInput_Deserialises()
        {
            var jsonContent = "null";
            var response = new HttpResponseMessage(HttpStatusCode.OK)
            {
                Content = new StringContent(jsonContent, Encoding.UTF8, "application/json")
            };
            response.EnsureSuccessStatusCode();
            var deserializer = new CustomJsonCodec(new Configuration());
            var actual = await deserializer.Deserialize<PaySlip.PaymentMethodEnum>(response);
            Assert.Equal(0, (int)actual);
        }
        /// <summary>
        /// Test the property 'EarningsLines'
        /// </summary>
        [Fact]
        public void EarningsLinesTest()
        {
            // TODO unit test for the property 'EarningsLines'
        }
        /// <summary>
        /// Test the property 'LeaveEarningsLines'
        /// </summary>
        [Fact]
        public void LeaveEarningsLinesTest()
        {
            // TODO unit test for the property 'LeaveEarningsLines'
        }
        /// <summary>
        /// Test the property 'TimesheetEarningsLines'
        /// </summary>
        [Fact]
        public void TimesheetEarningsLinesTest()
        {
            // TODO unit test for the property 'TimesheetEarningsLines'
        }
        /// <summary>
        /// Test the property 'DeductionLines'
        /// </summary>
        [Fact]
        public void DeductionLinesTest()
        {
            // TODO unit test for the property 'DeductionLines'
        }
        /// <summary>
        /// Test the property 'ReimbursementLines'
        /// </summary>
        [Fact]
        public void ReimbursementLinesTest()
        {
            // TODO unit test for the property 'ReimbursementLines'
        }
        /// <summary>
        /// Test the property 'LeaveAccrualLines'
        /// </summary>
        [Fact]
        public void LeaveAccrualLinesTest()
        {
            // TODO unit test for the property 'LeaveAccrualLines'
        }
        /// <summary>
        /// Test the property 'SuperannuationLines'
        /// </summary>
        [Fact]
        public void SuperannuationLinesTest()
        {
            // TODO unit test for the property 'SuperannuationLines'
        }
        /// <summary>
        /// Test the property 'PaymentLines'
        /// </summary>
        [Fact]
        public void PaymentLinesTest()
        {
            // TODO unit test for the property 'PaymentLines'
        }
        /// <summary>
        /// Test the property 'EmployeeTaxLines'
        /// </summary>
        [Fact]
        public void EmployeeTaxLinesTest()
        {
            // TODO unit test for the property 'EmployeeTaxLines'
        }
        /// <summary>
        /// Test the property 'EmployerTaxLines'
        /// </summary>
        [Fact]
        public void EmployerTaxLinesTest()
        {
            // TODO unit test for the property 'EmployerTaxLines'
        }
        /// <summary>
        /// Test the property 'StatutoryDeductionLines'
        /// </summary>
        [Fact]
        public void StatutoryDeductionLinesTest()
        {
            // TODO unit test for the property 'StatutoryDeductionLines'
        }
        /// <summary>
        /// Test the property 'TaxSettings'
        /// </summary>
        [Fact]
        public void TaxSettingsTest()
        {
            // TODO unit test for the property 'TaxSettings'
        }
        /// <summary>
        /// Test the property 'GrossEarningsHistory'
        /// </summary>
        [Fact]
        public void GrossEarningsHistoryTest()
        {
            // TODO unit test for the property 'GrossEarningsHistory'
        }

    }

}
