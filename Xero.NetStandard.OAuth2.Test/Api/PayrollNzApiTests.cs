/* 
 * Xero Payroll NZ
 *
 * This is the Xero Payroll API for orgs in the NZ region.
 *
 * The version of the OpenAPI document: 2.7.0
 * Contact: api@xero.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using Xero.NetStandard.OAuth2.Client;
using Xero.NetStandard.OAuth2.Api;
using Xero.NetStandard.OAuth2.Model.PayrollNz;

namespace Xero.NetStandard.OAuth2.Test.Api.PayrollNz
{
    /// <summary>
    ///  Class for testing PayrollNzApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PayrollNzApiTests : IDisposable
    {
        private PayrollNzApi instance;

        public PayrollNzApiTests()
        {
            instance = new PayrollNzApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PayrollNzApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' PayrollNzApi
            //Assert.IsType(typeof(PayrollNzApi), instance, "instance is a PayrollNzApi");
        }


        /// <summary>
        /// Test ApproveTimesheet
        /// </summary>
        [Fact]
        public void ApproveTimesheetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid timesheetID = null;
            //var response = instance.ApproveTimesheetAsync(xeroTenantId, timesheetID);
            //Assert.IsType<TimesheetObject> (response);
        }

        /// <summary>
        /// Test CreateDeduction
        /// </summary>
        [Fact]
        public void CreateDeductionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Deduction deduction = null;
            //var response = instance.CreateDeductionAsync(xeroTenantId, deduction);
            //Assert.IsType<DeductionObject> (response);
        }

        /// <summary>
        /// Test CreateEarningsRate
        /// </summary>
        [Fact]
        public void CreateEarningsRateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //EarningsRate earningsRate = null;
            //var response = instance.CreateEarningsRateAsync(xeroTenantId, earningsRate);
            //Assert.IsType<EarningsRateObject> (response);
        }

        /// <summary>
        /// Test CreateEmployee
        /// </summary>
        [Fact]
        public void CreateEmployeeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Employee employee = null;
            //var response = instance.CreateEmployeeAsync(xeroTenantId, employee);
            //Assert.IsType<EmployeeObject> (response);
        }

        /// <summary>
        /// Test CreateEmployeeEarningsTemplate
        /// </summary>
        [Fact]
        public void CreateEmployeeEarningsTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid employeeId = null;
            //EarningsTemplate earningsTemplate = null;
            //var response = instance.CreateEmployeeEarningsTemplateAsync(xeroTenantId, employeeId, earningsTemplate);
            //Assert.IsType<EarningsTemplateObject> (response);
        }

        /// <summary>
        /// Test CreateEmployeeLeave
        /// </summary>
        [Fact]
        public void CreateEmployeeLeaveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid employeeId = null;
            //EmployeeLeave employeeLeave = null;
            //var response = instance.CreateEmployeeLeaveAsync(xeroTenantId, employeeId, employeeLeave);
            //Assert.IsType<EmployeeLeaveObject> (response);
        }

        /// <summary>
        /// Test CreateEmployeeLeaveSetup
        /// </summary>
        [Fact]
        public void CreateEmployeeLeaveSetupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid employeeId = null;
            //EmployeeLeaveSetup employeeLeaveSetup = null;
            //var response = instance.CreateEmployeeLeaveSetupAsync(xeroTenantId, employeeId, employeeLeaveSetup);
            //Assert.IsType<EmployeeLeaveSetupObject> (response);
        }

        /// <summary>
        /// Test CreateEmployeeLeaveType
        /// </summary>
        [Fact]
        public void CreateEmployeeLeaveTypeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid employeeId = null;
            //EmployeeLeaveType employeeLeaveType = null;
            //var response = instance.CreateEmployeeLeaveTypeAsync(xeroTenantId, employeeId, employeeLeaveType);
            //Assert.IsType<EmployeeLeaveTypeObject> (response);
        }

        /// <summary>
        /// Test CreateEmployeeOpeningBalances
        /// </summary>
        [Fact]
        public void CreateEmployeeOpeningBalancesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid employeeId = null;
            //List<EmployeeOpeningBalance> employeeOpeningBalance = null;
            //var response = instance.CreateEmployeeOpeningBalancesAsync(xeroTenantId, employeeId, employeeOpeningBalance);
            //Assert.IsType<EmployeeOpeningBalancesObject> (response);
        }

        /// <summary>
        /// Test CreateEmployeePaymentMethod
        /// </summary>
        [Fact]
        public void CreateEmployeePaymentMethodTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid employeeId = null;
            //PaymentMethod paymentMethod = null;
            //var response = instance.CreateEmployeePaymentMethodAsync(xeroTenantId, employeeId, paymentMethod);
            //Assert.IsType<PaymentMethodObject> (response);
        }

        /// <summary>
        /// Test CreateEmployeeSalaryAndWage
        /// </summary>
        [Fact]
        public void CreateEmployeeSalaryAndWageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid employeeId = null;
            //SalaryAndWage salaryAndWage = null;
            //var response = instance.CreateEmployeeSalaryAndWageAsync(xeroTenantId, employeeId, salaryAndWage);
            //Assert.IsType<SalaryAndWageObject> (response);
        }

        /// <summary>
        /// Test CreateEmployment
        /// </summary>
        [Fact]
        public void CreateEmploymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid employeeId = null;
            //Employment employment = null;
            //var response = instance.CreateEmploymentAsync(xeroTenantId, employeeId, employment);
            //Assert.IsType<EmploymentObject> (response);
        }

        /// <summary>
        /// Test CreateLeaveType
        /// </summary>
        [Fact]
        public void CreateLeaveTypeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //LeaveType leaveType = null;
            //var response = instance.CreateLeaveTypeAsync(xeroTenantId, leaveType);
            //Assert.IsType<LeaveTypeObject> (response);
        }

        /// <summary>
        /// Test CreateMultipleEmployeeEarningsTemplate
        /// </summary>
        [Fact]
        public void CreateMultipleEmployeeEarningsTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid employeeId = null;
            //List<EarningsTemplate> earningsTemplate = null;
            //var response = instance.CreateMultipleEmployeeEarningsTemplateAsync(xeroTenantId, employeeId, earningsTemplate);
            //Assert.IsType<EmployeeEarningsTemplates> (response);
        }

        /// <summary>
        /// Test CreatePayRun
        /// </summary>
        [Fact]
        public void CreatePayRunTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //PayRun payRun = null;
            //var response = instance.CreatePayRunAsync(xeroTenantId, payRun);
            //Assert.IsType<PayRunObject> (response);
        }

        /// <summary>
        /// Test CreatePayRunCalendar
        /// </summary>
        [Fact]
        public void CreatePayRunCalendarTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //PayRunCalendar payRunCalendar = null;
            //var response = instance.CreatePayRunCalendarAsync(xeroTenantId, payRunCalendar);
            //Assert.IsType<PayRunCalendarObject> (response);
        }

        /// <summary>
        /// Test CreateReimbursement
        /// </summary>
        [Fact]
        public void CreateReimbursementTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Reimbursement reimbursement = null;
            //var response = instance.CreateReimbursementAsync(xeroTenantId, reimbursement);
            //Assert.IsType<ReimbursementObject> (response);
        }

        /// <summary>
        /// Test CreateSuperannuation
        /// </summary>
        [Fact]
        public void CreateSuperannuationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Benefit benefit = null;
            //var response = instance.CreateSuperannuationAsync(xeroTenantId, benefit);
            //Assert.IsType<SuperannuationObject> (response);
        }

        /// <summary>
        /// Test CreateTimesheet
        /// </summary>
        [Fact]
        public void CreateTimesheetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Timesheet timesheet = null;
            //var response = instance.CreateTimesheetAsync(xeroTenantId, timesheet);
            //Assert.IsType<TimesheetObject> (response);
        }

        /// <summary>
        /// Test CreateTimesheetLine
        /// </summary>
        [Fact]
        public void CreateTimesheetLineTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid timesheetID = null;
            //TimesheetLine timesheetLine = null;
            //var response = instance.CreateTimesheetLineAsync(xeroTenantId, timesheetID, timesheetLine);
            //Assert.IsType<TimesheetLineObject> (response);
        }

        /// <summary>
        /// Test DeleteEmployeeEarningsTemplate
        /// </summary>
        [Fact]
        public void DeleteEmployeeEarningsTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid employeeId = null;
            //Guid payTemplateEarningID = null;
            //var response = instance.DeleteEmployeeEarningsTemplateAsync(xeroTenantId, employeeId, payTemplateEarningID);
            //Assert.IsType<EarningsTemplateObject> (response);
        }

        /// <summary>
        /// Test DeleteEmployeeLeave
        /// </summary>
        [Fact]
        public void DeleteEmployeeLeaveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid employeeId = null;
            //Guid leaveID = null;
            //var response = instance.DeleteEmployeeLeaveAsync(xeroTenantId, employeeId, leaveID);
            //Assert.IsType<EmployeeLeaveObject> (response);
        }

        /// <summary>
        /// Test DeleteEmployeeSalaryAndWage
        /// </summary>
        [Fact]
        public void DeleteEmployeeSalaryAndWageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid employeeId = null;
            //Guid salaryAndWagesID = null;
            //var response = instance.DeleteEmployeeSalaryAndWageAsync(xeroTenantId, employeeId, salaryAndWagesID);
            //Assert.IsType<SalaryAndWageObject> (response);
        }

        /// <summary>
        /// Test DeleteTimesheet
        /// </summary>
        [Fact]
        public void DeleteTimesheetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid timesheetID = null;
            //var response = instance.DeleteTimesheetAsync(xeroTenantId, timesheetID);
            //Assert.IsType<TimesheetLine> (response);
        }

        /// <summary>
        /// Test DeleteTimesheetLine
        /// </summary>
        [Fact]
        public void DeleteTimesheetLineTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid timesheetID = null;
            //Guid timesheetLineID = null;
            //var response = instance.DeleteTimesheetLineAsync(xeroTenantId, timesheetID, timesheetLineID);
            //Assert.IsType<TimesheetLine> (response);
        }

        /// <summary>
        /// Test GetDeduction
        /// </summary>
        [Fact]
        public void GetDeductionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid deductionId = null;
            //var response = instance.GetDeductionAsync(xeroTenantId, deductionId);
            //Assert.IsType<DeductionObject> (response);
        }

        /// <summary>
        /// Test GetDeductions
        /// </summary>
        [Fact]
        public void GetDeductionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //int? page = null;
            //var response = instance.GetDeductionsAsync(xeroTenantId, page);
            //Assert.IsType<Deductions> (response);
        }

        /// <summary>
        /// Test GetEarningsRate
        /// </summary>
        [Fact]
        public void GetEarningsRateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid earningsRateID = null;
            //var response = instance.GetEarningsRateAsync(xeroTenantId, earningsRateID);
            //Assert.IsType<EarningsRateObject> (response);
        }

        /// <summary>
        /// Test GetEarningsRates
        /// </summary>
        [Fact]
        public void GetEarningsRatesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //int? page = null;
            //var response = instance.GetEarningsRatesAsync(xeroTenantId, page);
            //Assert.IsType<EarningsRates> (response);
        }

        /// <summary>
        /// Test GetEmployee
        /// </summary>
        [Fact]
        public void GetEmployeeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid employeeId = null;
            //var response = instance.GetEmployeeAsync(xeroTenantId, employeeId);
            //Assert.IsType<EmployeeObject> (response);
        }

        /// <summary>
        /// Test GetEmployeeLeaveBalances
        /// </summary>
        [Fact]
        public void GetEmployeeLeaveBalancesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid employeeId = null;
            //var response = instance.GetEmployeeLeaveBalancesAsync(xeroTenantId, employeeId);
            //Assert.IsType<EmployeeLeaveBalances> (response);
        }

        /// <summary>
        /// Test GetEmployeeLeavePeriods
        /// </summary>
        [Fact]
        public void GetEmployeeLeavePeriodsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid employeeId = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //var response = instance.GetEmployeeLeavePeriodsAsync(xeroTenantId, employeeId, startDate, endDate);
            //Assert.IsType<LeavePeriods> (response);
        }

        /// <summary>
        /// Test GetEmployeeLeaveTypes
        /// </summary>
        [Fact]
        public void GetEmployeeLeaveTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid employeeId = null;
            //var response = instance.GetEmployeeLeaveTypesAsync(xeroTenantId, employeeId);
            //Assert.IsType<EmployeeLeaveTypes> (response);
        }

        /// <summary>
        /// Test GetEmployeeLeaves
        /// </summary>
        [Fact]
        public void GetEmployeeLeavesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid employeeId = null;
            //var response = instance.GetEmployeeLeavesAsync(xeroTenantId, employeeId);
            //Assert.IsType<EmployeeLeaves> (response);
        }

        /// <summary>
        /// Test GetEmployeeOpeningBalances
        /// </summary>
        [Fact]
        public void GetEmployeeOpeningBalancesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid employeeId = null;
            //var response = instance.GetEmployeeOpeningBalancesAsync(xeroTenantId, employeeId);
            //Assert.IsType<EmployeeOpeningBalancesObject> (response);
        }

        /// <summary>
        /// Test GetEmployeePayTemplates
        /// </summary>
        [Fact]
        public void GetEmployeePayTemplatesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid employeeId = null;
            //var response = instance.GetEmployeePayTemplatesAsync(xeroTenantId, employeeId);
            //Assert.IsType<EmployeePayTemplates> (response);
        }

        /// <summary>
        /// Test GetEmployeePaymentMethod
        /// </summary>
        [Fact]
        public void GetEmployeePaymentMethodTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid employeeId = null;
            //var response = instance.GetEmployeePaymentMethodAsync(xeroTenantId, employeeId);
            //Assert.IsType<PaymentMethodObject> (response);
        }

        /// <summary>
        /// Test GetEmployeeSalaryAndWage
        /// </summary>
        [Fact]
        public void GetEmployeeSalaryAndWageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid employeeId = null;
            //Guid salaryAndWagesID = null;
            //var response = instance.GetEmployeeSalaryAndWageAsync(xeroTenantId, employeeId, salaryAndWagesID);
            //Assert.IsType<SalaryAndWages> (response);
        }

        /// <summary>
        /// Test GetEmployeeSalaryAndWages
        /// </summary>
        [Fact]
        public void GetEmployeeSalaryAndWagesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid employeeId = null;
            //int? page = null;
            //var response = instance.GetEmployeeSalaryAndWagesAsync(xeroTenantId, employeeId, page);
            //Assert.IsType<SalaryAndWages> (response);
        }

        /// <summary>
        /// Test GetEmployeeTax
        /// </summary>
        [Fact]
        public void GetEmployeeTaxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid employeeId = null;
            //var response = instance.GetEmployeeTaxAsync(xeroTenantId, employeeId);
            //Assert.IsType<EmployeeTaxObject> (response);
        }

        /// <summary>
        /// Test GetEmployees
        /// </summary>
        [Fact]
        public void GetEmployeesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //string firstName = null;
            //string lastName = null;
            //int? page = null;
            //var response = instance.GetEmployeesAsync(xeroTenantId, firstName, lastName, page);
            //Assert.IsType<Employees> (response);
        }

        /// <summary>
        /// Test GetLeaveType
        /// </summary>
        [Fact]
        public void GetLeaveTypeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid leaveTypeID = null;
            //var response = instance.GetLeaveTypeAsync(xeroTenantId, leaveTypeID);
            //Assert.IsType<LeaveTypeObject> (response);
        }

        /// <summary>
        /// Test GetLeaveTypes
        /// </summary>
        [Fact]
        public void GetLeaveTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //int? page = null;
            //bool? activeOnly = null;
            //var response = instance.GetLeaveTypesAsync(xeroTenantId, page, activeOnly);
            //Assert.IsType<LeaveTypes> (response);
        }

        /// <summary>
        /// Test GetPayRun
        /// </summary>
        [Fact]
        public void GetPayRunTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid payRunID = null;
            //var response = instance.GetPayRunAsync(xeroTenantId, payRunID);
            //Assert.IsType<PayRunObject> (response);
        }

        /// <summary>
        /// Test GetPayRunCalendar
        /// </summary>
        [Fact]
        public void GetPayRunCalendarTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid payrollCalendarID = null;
            //var response = instance.GetPayRunCalendarAsync(xeroTenantId, payrollCalendarID);
            //Assert.IsType<PayRunCalendarObject> (response);
        }

        /// <summary>
        /// Test GetPayRunCalendars
        /// </summary>
        [Fact]
        public void GetPayRunCalendarsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //int? page = null;
            //var response = instance.GetPayRunCalendarsAsync(xeroTenantId, page);
            //Assert.IsType<PayRunCalendars> (response);
        }

        /// <summary>
        /// Test GetPayRuns
        /// </summary>
        [Fact]
        public void GetPayRunsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //int? page = null;
            //string status = null;
            //var response = instance.GetPayRunsAsync(xeroTenantId, page, status);
            //Assert.IsType<PayRuns> (response);
        }

        /// <summary>
        /// Test GetPaySlip
        /// </summary>
        [Fact]
        public void GetPaySlipTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid paySlipID = null;
            //var response = instance.GetPaySlipAsync(xeroTenantId, paySlipID);
            //Assert.IsType<PaySlipObject> (response);
        }

        /// <summary>
        /// Test GetPaySlips
        /// </summary>
        [Fact]
        public void GetPaySlipsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid payRunID = null;
            //int? page = null;
            //var response = instance.GetPaySlipsAsync(xeroTenantId, payRunID, page);
            //Assert.IsType<PaySlips> (response);
        }

        /// <summary>
        /// Test GetReimbursement
        /// </summary>
        [Fact]
        public void GetReimbursementTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid reimbursementID = null;
            //var response = instance.GetReimbursementAsync(xeroTenantId, reimbursementID);
            //Assert.IsType<ReimbursementObject> (response);
        }

        /// <summary>
        /// Test GetReimbursements
        /// </summary>
        [Fact]
        public void GetReimbursementsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //int? page = null;
            //var response = instance.GetReimbursementsAsync(xeroTenantId, page);
            //Assert.IsType<Reimbursements> (response);
        }

        /// <summary>
        /// Test GetSettings
        /// </summary>
        [Fact]
        public void GetSettingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //var response = instance.GetSettingsAsync(xeroTenantId);
            //Assert.IsType<Settings> (response);
        }

        /// <summary>
        /// Test GetStatutoryDeduction
        /// </summary>
        [Fact]
        public void GetStatutoryDeductionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid id = null;
            //var response = instance.GetStatutoryDeductionAsync(xeroTenantId, id);
            //Assert.IsType<StatutoryDeductionObject> (response);
        }

        /// <summary>
        /// Test GetStatutoryDeductions
        /// </summary>
        [Fact]
        public void GetStatutoryDeductionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //int? page = null;
            //var response = instance.GetStatutoryDeductionsAsync(xeroTenantId, page);
            //Assert.IsType<StatutoryDeductions> (response);
        }

        /// <summary>
        /// Test GetSuperannuation
        /// </summary>
        [Fact]
        public void GetSuperannuationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid superannuationID = null;
            //var response = instance.GetSuperannuationAsync(xeroTenantId, superannuationID);
            //Assert.IsType<SuperannuationObject> (response);
        }

        /// <summary>
        /// Test GetSuperannuations
        /// </summary>
        [Fact]
        public void GetSuperannuationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //int? page = null;
            //var response = instance.GetSuperannuationsAsync(xeroTenantId, page);
            //Assert.IsType<Superannuations> (response);
        }

        /// <summary>
        /// Test GetTimesheet
        /// </summary>
        [Fact]
        public void GetTimesheetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid timesheetID = null;
            //var response = instance.GetTimesheetAsync(xeroTenantId, timesheetID);
            //Assert.IsType<TimesheetObject> (response);
        }

        /// <summary>
        /// Test GetTimesheets
        /// </summary>
        [Fact]
        public void GetTimesheetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //int? page = null;
            //Guid? employeeId = null;
            //Guid? payrollCalendarId = null;
            //var response = instance.GetTimesheetsAsync(xeroTenantId, page, employeeId, payrollCalendarId);
            //Assert.IsType<Timesheets> (response);
        }

        /// <summary>
        /// Test GetTrackingCategories
        /// </summary>
        [Fact]
        public void GetTrackingCategoriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //var response = instance.GetTrackingCategoriesAsync(xeroTenantId);
            //Assert.IsType<TrackingCategories> (response);
        }

        /// <summary>
        /// Test RevertTimesheet
        /// </summary>
        [Fact]
        public void RevertTimesheetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid timesheetID = null;
            //var response = instance.RevertTimesheetAsync(xeroTenantId, timesheetID);
            //Assert.IsType<TimesheetObject> (response);
        }

        /// <summary>
        /// Test UpdateEmployee
        /// </summary>
        [Fact]
        public void UpdateEmployeeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid employeeId = null;
            //Employee employee = null;
            //var response = instance.UpdateEmployeeAsync(xeroTenantId, employeeId, employee);
            //Assert.IsType<EmployeeObject> (response);
        }

        /// <summary>
        /// Test UpdateEmployeeEarningsTemplate
        /// </summary>
        [Fact]
        public void UpdateEmployeeEarningsTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid employeeId = null;
            //Guid payTemplateEarningID = null;
            //EarningsTemplate earningsTemplate = null;
            //var response = instance.UpdateEmployeeEarningsTemplateAsync(xeroTenantId, employeeId, payTemplateEarningID, earningsTemplate);
            //Assert.IsType<EarningsTemplateObject> (response);
        }

        /// <summary>
        /// Test UpdateEmployeeLeave
        /// </summary>
        [Fact]
        public void UpdateEmployeeLeaveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid employeeId = null;
            //Guid leaveID = null;
            //EmployeeLeave employeeLeave = null;
            //var response = instance.UpdateEmployeeLeaveAsync(xeroTenantId, employeeId, leaveID, employeeLeave);
            //Assert.IsType<EmployeeLeaveObject> (response);
        }

        /// <summary>
        /// Test UpdateEmployeeSalaryAndWage
        /// </summary>
        [Fact]
        public void UpdateEmployeeSalaryAndWageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid employeeId = null;
            //Guid salaryAndWagesID = null;
            //SalaryAndWage salaryAndWage = null;
            //var response = instance.UpdateEmployeeSalaryAndWageAsync(xeroTenantId, employeeId, salaryAndWagesID, salaryAndWage);
            //Assert.IsType<SalaryAndWageObject> (response);
        }

        /// <summary>
        /// Test UpdateEmployeeTax
        /// </summary>
        [Fact]
        public void UpdateEmployeeTaxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid employeeId = null;
            //EmployeeTax employeeTax = null;
            //var response = instance.UpdateEmployeeTaxAsync(xeroTenantId, employeeId, employeeTax);
            //Assert.IsType<EmployeeTaxObject> (response);
        }

        /// <summary>
        /// Test UpdatePayRun
        /// </summary>
        [Fact]
        public void UpdatePayRunTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid payRunID = null;
            //PayRun payRun = null;
            //var response = instance.UpdatePayRunAsync(xeroTenantId, payRunID, payRun);
            //Assert.IsType<PayRunObject> (response);
        }

        /// <summary>
        /// Test UpdatePaySlipLineItems
        /// </summary>
        [Fact]
        public void UpdatePaySlipLineItemsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid paySlipID = null;
            //PaySlip paySlip = null;
            //var response = instance.UpdatePaySlipLineItemsAsync(xeroTenantId, paySlipID, paySlip);
            //Assert.IsType<PaySlipObject> (response);
        }

        /// <summary>
        /// Test UpdateTimesheetLine
        /// </summary>
        [Fact]
        public void UpdateTimesheetLineTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xeroTenantId = null;
            //Guid timesheetID = null;
            //Guid timesheetLineID = null;
            //TimesheetLine timesheetLine = null;
            //var response = instance.UpdateTimesheetLineAsync(xeroTenantId, timesheetID, timesheetLineID, timesheetLine);
            //Assert.IsType<TimesheetLineObject> (response);
        }

    }

}
