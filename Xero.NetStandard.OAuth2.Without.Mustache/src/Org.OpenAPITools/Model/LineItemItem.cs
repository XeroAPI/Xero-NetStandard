/*
 * Xero Accounting API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.1.1
 * Contact: api@xero.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// LineItemItem
    /// </summary>
    [DataContract(Name = "LineItemItem")]
    public partial class LineItemItem : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LineItemItem" /> class.
        /// </summary>
        /// <param name="code">User defined item code (max length &#x3D; 30).</param>
        /// <param name="name">The name of the item (max length &#x3D; 50).</param>
        /// <param name="itemID">The Xero identifier for an Item.</param>
        public LineItemItem(string code = default(string), string name = default(string), Guid itemID = default(Guid))
        {
            this.Code = code;
            this.Name = name;
            this.ItemID = itemID;
        }

        /// <summary>
        /// User defined item code (max length &#x3D; 30)
        /// </summary>
        /// <value>User defined item code (max length &#x3D; 30)</value>
        [DataMember(Name = "Code", EmitDefaultValue = false)]
        public string Code { get; set; }

        /// <summary>
        /// The name of the item (max length &#x3D; 50)
        /// </summary>
        /// <value>The name of the item (max length &#x3D; 50)</value>
        [DataMember(Name = "Name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// The Xero identifier for an Item
        /// </summary>
        /// <value>The Xero identifier for an Item</value>
        [DataMember(Name = "ItemID", EmitDefaultValue = false)]
        public Guid ItemID { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class LineItemItem {\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  ItemID: ").Append(ItemID).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Code (string) maxLength
            if (this.Code != null && this.Code.Length > 30)
            {
                yield return new ValidationResult("Invalid value for Code, length must be less than 30.", new [] { "Code" });
            }

            // Name (string) maxLength
            if (this.Name != null && this.Name.Length > 50)
            {
                yield return new ValidationResult("Invalid value for Name, length must be less than 50.", new [] { "Name" });
            }

            yield break;
        }
    }

}
