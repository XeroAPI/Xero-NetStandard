/*
 * Xero Accounting API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.1.1
 * Contact: api@xero.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// TrackingOption
    /// </summary>
    [DataContract(Name = "TrackingOption")]
    public partial class TrackingOption : IValidatableObject
    {
        /// <summary>
        /// The status of a tracking option
        /// </summary>
        /// <value>The status of a tracking option</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum StatusEnum
        {
            /// <summary>
            /// Enum ACTIVE for value: ACTIVE
            /// </summary>
            [EnumMember(Value = "ACTIVE")]
            ACTIVE = 1,

            /// <summary>
            /// Enum ARCHIVED for value: ARCHIVED
            /// </summary>
            [EnumMember(Value = "ARCHIVED")]
            ARCHIVED = 2,

            /// <summary>
            /// Enum DELETED for value: DELETED
            /// </summary>
            [EnumMember(Value = "DELETED")]
            DELETED = 3
        }


        /// <summary>
        /// The status of a tracking option
        /// </summary>
        /// <value>The status of a tracking option</value>
        [DataMember(Name = "Status", EmitDefaultValue = false)]
        public StatusEnum? Status { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="TrackingOption" /> class.
        /// </summary>
        /// <param name="trackingOptionID">The Xero identifier for a tracking option e.g. ae777a87-5ef3-4fa0-a4f0-d10e1f13073a.</param>
        /// <param name="name">The name of the tracking option e.g. Marketing, East (max length &#x3D; 100).</param>
        /// <param name="status">The status of a tracking option.</param>
        /// <param name="trackingCategoryID">Filter by a tracking category e.g. 297c2dc5-cc47-4afd-8ec8-74990b8761e9.</param>
        public TrackingOption(Guid trackingOptionID = default(Guid), string name = default(string), StatusEnum? status = default(StatusEnum?), Guid trackingCategoryID = default(Guid))
        {
            this.TrackingOptionID = trackingOptionID;
            this.Name = name;
            this.Status = status;
            this.TrackingCategoryID = trackingCategoryID;
        }

        /// <summary>
        /// The Xero identifier for a tracking option e.g. ae777a87-5ef3-4fa0-a4f0-d10e1f13073a
        /// </summary>
        /// <value>The Xero identifier for a tracking option e.g. ae777a87-5ef3-4fa0-a4f0-d10e1f13073a</value>
        [DataMember(Name = "TrackingOptionID", EmitDefaultValue = false)]
        public Guid TrackingOptionID { get; set; }

        /// <summary>
        /// The name of the tracking option e.g. Marketing, East (max length &#x3D; 100)
        /// </summary>
        /// <value>The name of the tracking option e.g. Marketing, East (max length &#x3D; 100)</value>
        [DataMember(Name = "Name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Filter by a tracking category e.g. 297c2dc5-cc47-4afd-8ec8-74990b8761e9
        /// </summary>
        /// <value>Filter by a tracking category e.g. 297c2dc5-cc47-4afd-8ec8-74990b8761e9</value>
        [DataMember(Name = "TrackingCategoryID", EmitDefaultValue = false)]
        public Guid TrackingCategoryID { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TrackingOption {\n");
            sb.Append("  TrackingOptionID: ").Append(TrackingOptionID).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  TrackingCategoryID: ").Append(TrackingCategoryID).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Name (string) maxLength
            if (this.Name != null && this.Name.Length > 100)
            {
                yield return new ValidationResult("Invalid value for Name, length must be less than 100.", new [] { "Name" });
            }

            yield break;
        }
    }

}
