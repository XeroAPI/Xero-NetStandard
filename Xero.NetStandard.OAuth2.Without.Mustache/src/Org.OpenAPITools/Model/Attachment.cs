/*
 * Xero Accounting API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.1.1
 * Contact: api@xero.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Attachment
    /// </summary>
    [DataContract(Name = "Attachment")]
    public partial class Attachment : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Attachment" /> class.
        /// </summary>
        /// <param name="attachmentID">Unique ID for the file.</param>
        /// <param name="fileName">Name of the file.</param>
        /// <param name="url">URL to the file on xero.com.</param>
        /// <param name="mimeType">Type of file.</param>
        /// <param name="contentLength">Length of the file content.</param>
        /// <param name="includeOnline">Include the file with the online invoice.</param>
        public Attachment(Guid attachmentID = default(Guid), string fileName = default(string), string url = default(string), string mimeType = default(string), int contentLength = default(int), bool includeOnline = default(bool))
        {
            this.AttachmentID = attachmentID;
            this.FileName = fileName;
            this.Url = url;
            this.MimeType = mimeType;
            this.ContentLength = contentLength;
            this.IncludeOnline = includeOnline;
        }

        /// <summary>
        /// Unique ID for the file
        /// </summary>
        /// <value>Unique ID for the file</value>
        /// <example>00000000-0000-0000-0000-000000000000</example>
        [DataMember(Name = "AttachmentID", EmitDefaultValue = false)]
        public Guid AttachmentID { get; set; }

        /// <summary>
        /// Name of the file
        /// </summary>
        /// <value>Name of the file</value>
        /// <example>xero-dev.jpg</example>
        [DataMember(Name = "FileName", EmitDefaultValue = false)]
        public string FileName { get; set; }

        /// <summary>
        /// URL to the file on xero.com
        /// </summary>
        /// <value>URL to the file on xero.com</value>
        /// <example>https://api.xero.com/api.xro/2.0/Accounts/da962997-a8bd-4dff-9616-01cdc199283f/Attachments/sample5.jpg</example>
        [DataMember(Name = "Url", EmitDefaultValue = false)]
        public string Url { get; set; }

        /// <summary>
        /// Type of file
        /// </summary>
        /// <value>Type of file</value>
        /// <example>image/jpg</example>
        [DataMember(Name = "MimeType", EmitDefaultValue = false)]
        public string MimeType { get; set; }

        /// <summary>
        /// Length of the file content
        /// </summary>
        /// <value>Length of the file content</value>
        [DataMember(Name = "ContentLength", EmitDefaultValue = false)]
        public int ContentLength { get; set; }

        /// <summary>
        /// Include the file with the online invoice
        /// </summary>
        /// <value>Include the file with the online invoice</value>
        [DataMember(Name = "IncludeOnline", EmitDefaultValue = true)]
        public bool IncludeOnline { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Attachment {\n");
            sb.Append("  AttachmentID: ").Append(AttachmentID).Append("\n");
            sb.Append("  FileName: ").Append(FileName).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  MimeType: ").Append(MimeType).Append("\n");
            sb.Append("  ContentLength: ").Append(ContentLength).Append("\n");
            sb.Append("  IncludeOnline: ").Append(IncludeOnline).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
