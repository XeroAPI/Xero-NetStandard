/*
 * Xero Accounting API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.1.1
 * Contact: api@xero.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Element
    /// </summary>
    [DataContract(Name = "Element")]
    public partial class Element : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Element" /> class.
        /// </summary>
        /// <param name="validationErrors">Array of Validation Error message.</param>
        /// <param name="batchPaymentID">Unique ID for batch payment object with validation error.</param>
        /// <param name="bankTransactionID">bankTransactionID.</param>
        /// <param name="creditNoteID">creditNoteID.</param>
        /// <param name="contactID">contactID.</param>
        /// <param name="invoiceID">invoiceID.</param>
        /// <param name="itemID">itemID.</param>
        /// <param name="purchaseOrderID">purchaseOrderID.</param>
        public Element(List<ValidationError> validationErrors = default(List<ValidationError>), Guid batchPaymentID = default(Guid), Guid bankTransactionID = default(Guid), Guid creditNoteID = default(Guid), Guid contactID = default(Guid), Guid invoiceID = default(Guid), Guid itemID = default(Guid), Guid purchaseOrderID = default(Guid))
        {
            this.ValidationErrors = validationErrors;
            this.BatchPaymentID = batchPaymentID;
            this.BankTransactionID = bankTransactionID;
            this.CreditNoteID = creditNoteID;
            this.ContactID = contactID;
            this.InvoiceID = invoiceID;
            this.ItemID = itemID;
            this.PurchaseOrderID = purchaseOrderID;
        }

        /// <summary>
        /// Array of Validation Error message
        /// </summary>
        /// <value>Array of Validation Error message</value>
        [DataMember(Name = "ValidationErrors", EmitDefaultValue = false)]
        public List<ValidationError> ValidationErrors { get; set; }

        /// <summary>
        /// Unique ID for batch payment object with validation error
        /// </summary>
        /// <value>Unique ID for batch payment object with validation error</value>
        [DataMember(Name = "BatchPaymentID", EmitDefaultValue = false)]
        public Guid BatchPaymentID { get; set; }

        /// <summary>
        /// Gets or Sets BankTransactionID
        /// </summary>
        [DataMember(Name = "BankTransactionID", EmitDefaultValue = false)]
        public Guid BankTransactionID { get; set; }

        /// <summary>
        /// Gets or Sets CreditNoteID
        /// </summary>
        [DataMember(Name = "CreditNoteID", EmitDefaultValue = false)]
        public Guid CreditNoteID { get; set; }

        /// <summary>
        /// Gets or Sets ContactID
        /// </summary>
        [DataMember(Name = "ContactID", EmitDefaultValue = false)]
        public Guid ContactID { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceID
        /// </summary>
        [DataMember(Name = "InvoiceID", EmitDefaultValue = false)]
        public Guid InvoiceID { get; set; }

        /// <summary>
        /// Gets or Sets ItemID
        /// </summary>
        [DataMember(Name = "ItemID", EmitDefaultValue = false)]
        public Guid ItemID { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseOrderID
        /// </summary>
        [DataMember(Name = "PurchaseOrderID", EmitDefaultValue = false)]
        public Guid PurchaseOrderID { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Element {\n");
            sb.Append("  ValidationErrors: ").Append(ValidationErrors).Append("\n");
            sb.Append("  BatchPaymentID: ").Append(BatchPaymentID).Append("\n");
            sb.Append("  BankTransactionID: ").Append(BankTransactionID).Append("\n");
            sb.Append("  CreditNoteID: ").Append(CreditNoteID).Append("\n");
            sb.Append("  ContactID: ").Append(ContactID).Append("\n");
            sb.Append("  InvoiceID: ").Append(InvoiceID).Append("\n");
            sb.Append("  ItemID: ").Append(ItemID).Append("\n");
            sb.Append("  PurchaseOrderID: ").Append(PurchaseOrderID).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
